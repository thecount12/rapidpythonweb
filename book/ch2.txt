<link rel="stylesheet" href="/static/lyx.css" type="text/css" media="all"/>

<p><b>Strings - Operators - Conditions</b></p>
<div class="Btandard">
You already wrote your first string <b>print 'I am learning python'</b>. Next, open up the command prompt or terminal and input the following string into the interpreter print 'It's my python'. You should receive an error. It's because of the extra single quote. Now try it with an escape key called the back slash (\):<b> print 'It\'s my python'</b>. If you need a back slash such as in 'the good \ the bad \ the ugly' just add an extra escape key (\\). 
</div>
<blockquote class="Quotation">
<span class="footnotesize"><i>&gt;&gt;&gt; <b>print 'the good \\ the bad \\ the ugly'</b>. </i></span><br/>
<span class="footnotesize"><i>the good \ the bad \ the ugly</i></span>
</blockquote>
<ul>
<li>
<b><a class="IndexReference" name="entry-Strings-Double-Quotes-0" href="#index-Strings-Double-Quotes"></a>Double Quotes</b>
</li>

</ul>
<div class="Btandard">
Your scripts might look a little better if you swap between single and double quotes as needed. 
</div>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt;<b> print "It's your python"</b></span><br/>
<span class="footnotesize">It's your python</span>
</blockquote>
<ul>
<li>
<b><a class="IndexReference" name="entry-Strings-Triple-Quotes-or-’’’-0" href="#index-Strings-Triple-Quotes-or-’’’"></a>Triple Quotes</b> (''' or """)
</li>

</ul>
<div class="Btandard">
Before we move into triple quotes keep in mind that you can also create a string like 'this'. 
</div>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt;<b> 'this'</b></span>
</blockquote>
<blockquote class="Quotation">
<b><span class="footnotesize">'</span></b>this'
</blockquote>
<div class="Btandard">
We can create the string but we really don’t have to do anything with it. The interpreter will tell you what it is. Next enter the following into the interpreter. (Make sure to enter 3 single quotes before and after). Warning a double quote and single quote together will give a different error.
</div>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt;<b> '''line 1</b></span>
</blockquote>
<blockquote class="Quotation">
<b><span class="footnotesize">... line 2'''</span></b>
</blockquote>
<blockquote class="Quotation">
<span class="footnotesize">'line 1\nline 2'</span>
</blockquote>
<div class="Btandard">
Notice the (\n) for new line. Try it with print in front of it and it will put the string in two separate lines. 
</div>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt;<b> print '''line 1 </b></span>
</blockquote>
<blockquote class="Quotation">
<b><span class="footnotesize">... line 2''' </span></b>
</blockquote>
<blockquote class="Quotation">
<span class="footnotesize">line 1 </span><br/>
<span class="footnotesize">line 2 </span>
</blockquote>
<div class="Btandard">
If you enter &ldquo;\n&rdquo; the following string will be displayed on a new line.. 
</div>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt;<b> print 'I\ngo' </b></span><br/>
<span class="footnotesize">I </span><br/>
<span class="footnotesize">go</span>
</blockquote>
<div class="Btandard">
The results will be the same with &gt;&gt;&gt;&rdquo;&rdquo;&rdquo;. Now a raw string with some slight changes. Try it at the interpreter. 
</div>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt;<b> r'string'</b></span><br/>
<span class="footnotesize">'string' </span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> r'string\string2'</b></span><br/>
<span class="footnotesize">'string\\string2' </span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> r"string\string2" </b></span><br/>
<span class="footnotesize">'string\\string2' </span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> print r"string\string2" </b></span><br/>
<span class="footnotesize">string\string2 </span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> r"""string\string2""" </b></span><br/>
<span class="footnotesize">'string\\string2' </span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> print r"""string\string2""" </b></span><br/>
<span class="footnotesize">string\string2 </span>
</blockquote>
<div class="Btandard">
The last example is to show that you can test your expressions as your scripts progress towards complexity in the future. The string examples above will become more evident as you progress. In section 3.2.3 there is an example of printing a string, integer, or float in a print statement on the same line. 
</div>
<h3 class="Subsection">
2.1.2 Variables and Assignment
</h3>
<div class="Btandard">
Assignments must begin with either an (upper or lower case) letter or an underscore (_). A number can be used after the first letter or underscore. Here are some examples. Please try each one to get a feel for the effect. 
</div>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt;<b> var1=1 </b></span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> print var1 </b></span><br/>
<span class="footnotesize">1 </span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> a=2 </b></span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> print a </b></span><br/>
<span class="footnotesize">2 </span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> b,c=3,4 </b></span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> print b,c </b></span><br/>
<span class="footnotesize">3 4<b> </b></span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> s= 'string' </b></span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> print s </b></span><br/>
<span class="footnotesize">string<b> </b></span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> s </b></span><br/>
<span class="footnotesize">'string' </span>
</blockquote>
<h3> 
2.1.3 Operators, Order, Indent
</h3>
<div class="Btandard">
These are the most commonly used operators. The rest are listed in the appendix. 
</div>
<div class="Btandard">
<div class="float">
<div class="table">
<div class="caption">
Table 2.1 Common Operators
</div>
<table>
<tr>
<td align="center" valign="top">
<b><span class="footnotesize">Operator</span></b>
</td>
<td align="center" valign="top">
<b><span class="footnotesize">Name</span></b>
</td>
<td align="center" valign="top">
<b><span class="footnotesize">Example</span></b>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">+</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Plus</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">2+2 gives 4</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">-</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Minus</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">4-2 gives 2</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">*</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Multiplication</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">2*6 gives 12</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">/</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Division</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">6/2 gives 12 </span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">%</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Modulus</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">8%3 gives 2</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">&lt;</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Less than</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">8&lt;4 gives false</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">&gt;</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Greater Than</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">8&gt;4 gives true</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">&lt;=</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Less Than or equal</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">8&lt;=4 gives false</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">&gt;=</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Greater Than or equal</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">8&gt;=4 gives false</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">==</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">Equal</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">x=2; x==2 gives true</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">!=</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">not equal</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">x=2; x!=3 gives true</span>
</td>

</tr>
<tr>
<td align="center" valign="top">
<span class="footnotesize">**</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">power</span>
</td>
<td align="center" valign="top">
<span class="footnotesize">2**2 gives 4, 2**3 gives 8</span>
</td>

</tr>

</table>

</div>

</div>

</div>
<div class="Btandard">
Type in the following expressions:
</div>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt;<b> 8+8</b></span><br/>
<span class="footnotesize">16</span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> 8-4</b></span><br/>
<span class="footnotesize">4</span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> 4*2</b></span><br/>
<span class="footnotesize">8</span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> 8/2</b></span><br/>
<span class="footnotesize">4</span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> 2+3*8</b></span><br/>
<span class="footnotesize">26</span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> 2/3 </b></span><br/>
<span class="footnotesize">0<b> </b></span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> 2.0/3.0 </b></span><br/>
<span class="footnotesize">0.66666666666666663 </span>
</blockquote>
<div class="Btandard">
Notice that in the equation 2+3*8, multiplication comes before addition. You can change this around by using parenthesis (2+3)*8 gives 40. Also notice 2/3 gives 0. Since it's an integer it returns the appropriate integer. If you know that the expression yields a decimal place, then supply it to begin with, otherwise you will corrupt your output. 
</div>
<h3> 
2.1.4 Pitfalls
</h3>
<div class="Btandard">
You may have noticed with the above examples that you can run into many pitfalls. Truncation, and conversion are the primary causes of corruption. Always test your work first before deployment.
</div>
<h3> 
2.1.5 Integer Conversion
</h3>
<blockquote class="Quotation">
<span class="footnotesize">&gt;&gt;&gt; number=1234</span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>int(number)</b></span><br/>
<span class="footnotesize">1234</span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>int(12.34)</b></span><br/>
<span class="footnotesize">12</span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>round(12.34)</b></span><br/>
<span class="footnotesize">12.0</span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b>oct(number)</b></span><br/>
<span class="footnotesize">'02322'</span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>hex(number)</b></span><br/>
<span class="footnotesize">'0x4d2'</span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>print 2**256</b></span><br/>
<span class="footnotesize">11579208923731619542357098500868790785326998466564</span><br/>
<span class="footnotesize">0564039457584007913129639936</span><br/>
<span class="footnotesize">&gt;&gt;&gt;<b> x=1234567890</b> </span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>y=3489493838 </b></span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>x+y </b></span><br/>
<span class="footnotesize">4724061728L </span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>x*x </b></span><br/>
<span class="footnotesize">1524157875019052100L </span><br/>
<span class="footnotesize">&gt;&gt;&gt; <b>x*y </b></span><br/>
<span class="footnotesize">4308017044747661820L </span>
</blockquote>
<div class="Btandard">
As you can see, &ldquo;python&rdquo; supports large integers out of the box. However you might see the &ldquo;L&rdquo; statement as listed in above examples. This really depends on the operating system.
</div>
<h2> 
2.1 Conditions and Indentation
</h2>
<h3>2.1.6 Flow Control if/else</h3>
</p>
<div class="Btandard">
<b>help(&ldquo;if&rdquo;)</b>
</div>
<div class="Btandard">
The if statement is used for conditional execution: Please DO NOT type the following. 
</div>
<blockquote class="Quotation">
<span class="footnotesize">if_stmt ::= "if" expression ":" suite </span><br/>
<span class="footnotesize">( "elif" expression ":" suite )* </span><br/>
<span class="footnotesize">["else" ":" suite] </span>
</blockquote>
<h3> 
2.1.7 For Loop
</h3>
<div class="Btandard">
<b>help(&ldquo;for&rdquo;)</b>
</div>
<div class="Btandard">
The for statement is used to iterate over the elements of a sequence (such as a string, tuple or list) or other iterable object. The syntax is below:
</div>
<blockquote class="Quotation">
<span class="footnotesize">for_stmt ::= "for" target_list "in" expression_list ": " suite </span><br/>
<span class="footnotesize">["else" ":" suite] </span>
</blockquote>
<h3 class="Subsection">
2.1.8 While Loop
</h3>
<div class="Btandard">
The while statement is used for repeated execution as long as an expression is true. Again, the syntax is below.
</div>
<blockquote class="Quotation">
<span class="footnotesize">while_stmt ::= "while" expression ":" suite </span><br/>
<span class="footnotesize">["else" ":" suite] </span>
</blockquote>
<h3 class="Subsection">
2.1.9 Examples
</h3>
<div class="Btandard">
Now we can learn a little about flow and conditions. You can utilize the interactive interpreter, but keep in mind that if you exit out early and connect back later, you will need to reinitialize x=3 again to test out the conditions. The preferred way would be to enter this into a file called &ldquo;conditions.py&rdquo;. Using your favorite editor, run it using the following command: &ldquo;python ./conditions.py&rdquo;. 
</div>
<div class="Btandard">
<b>Pay ATTENTION to indentation!</b>
</div>
<blockquote class="Quotation">
<span class="footnotesize">x=3</span><br/>
<span class="footnotesize">if x &lt; 4: </span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "x is less then 4 x is ",x</span><br/>
<span class="footnotesize">if (x &lt; 4 or x &gt; 2): </span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "x is less then 4 and greater than 2, x=", x </span><br/>
<span class="footnotesize">if x == 1:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Item 1 - true value", x</span><br/>
<span class="footnotesize">elif x == 2:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Item 2 - true value", x</span><br/>
<span class="footnotesize">elif x == 3:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Item 3 - true value", x</span><br/>
<span class="footnotesize">else:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Default option if none listed", x</span><br/>
<span class="footnotesize">for i in [1,2,3,4,5,6,7,8,9,10]:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Iteration #", i</span><br/>
<span class="footnotesize">for i in range(5):</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print i # note this prints up to 4 </span><br/>
<span class="footnotesize">while (x&lt; 10):</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "The while iteration is.", x</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
x=x+1</span>
</blockquote>
<div class="Btandard">
Indentation can be either a space or a tab. Whichever you choose will set the level for the rest of the script. After you run &ldquo;conditions.py&rdquo; feel free to edit it and change the values. You can remove the indentation and read the errors. With what you have learned you can compute just about any algorithm. Of course input functions, and methods would round out your knowledge and can be found in the next chapter. 
</div>
<h3 class="Subsection">
2.1.10 Conditions and Indentation
</h3>
<div class="Btandard">
You can utilize the interactive interpreter or continue to use your favorite editor. Enter the following data into a file called <b>&ldquo;conditions.py</b>&rdquo;.
</div>
<div class="Btandard">
<b>Pay ATTENTION to indentation!</b>
</div>
<blockquote class="Quotation">
<span class="footnotesize">x=3</span><br/>
<span class="footnotesize">if x &lt; 4: </span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "x is less then 4 x is ",x # notice the space (is ",x)</span><br/>
<span class="footnotesize">if (x &lt; 4 or x &gt; 2): </span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "x is less then 4 and greater then 2, x=", x # notice (x=", x) </span><br/>
<span class="footnotesize">if x == 1:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Item 1 - true value", x</span><br/>
<span class="footnotesize">elif x == 2:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Item 2 - true value", x</span><br/>
<span class="footnotesize">elif x == 3:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Item 3 - true value", x</span><br/>
<span class="footnotesize">else:</span><br/>
<span class="footnotesize"><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Default option if none listed", x</span>
</blockquote>
<div class="Btandard">
The results are: 
</div>
<blockquote class="Quotation">
<span class="footnotesize"><i>x is less then 4 x is 3 </i></span><br/>
<span class="footnotesize"><i>x is less then 4 and greater than 2, x= 3</i></span><br/>
<span class="footnotesize"><i>Item 3 - true value 3 </i></span>
</blockquote>
<div class="Btandard">
Standard iteration:
</div>
<blockquote class="Quotation">
<span class="footnotesize"><i>for i in [1,2,3,4,5]:</i></span><br/>
<span class="footnotesize"><i><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "Iteration #", i</i></span>
</blockquote>
<div class="Btandard">
results: 
</div>
<blockquote class="Quotation">
<span class="footnotesize"><i>Iteration # 1 </i></span><br/>
<span class="footnotesize"><i>Iteration # 2 </i></span><br/>
<span class="footnotesize"><i>Iteration # 3 </i></span><br/>
<span class="footnotesize"><i>Iteration # 4 </i></span><br/>
<span class="footnotesize"><i>Iteration # 5 </i></span>
</blockquote>
<div class="Btandard">
Iterate a range:
</div>
<blockquote class="Quotation">
<span class="footnotesize"><i>for i in range(5):</i></span><br/>
<span class="footnotesize"><i><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print i # note this prints up to 4 </i></span>
</blockquote>
<div class="Btandard">
results:
</div>
<blockquote class="Quotation">
<span class="footnotesize"><i>0 </i></span><br/>
<span class="footnotesize"><i>1 </i></span><br/>
<span class="footnotesize"><i>2 </i></span><br/>
<span class="footnotesize"><i>3 </i></span><br/>
<span class="footnotesize"><i>4 </i></span>
</blockquote>
<div class="Btandard">
Notice that it went from 0 to 4. You can change where it starts by setting an additional parameter <a class="IndexReference" name="entry-range-0" href="#index-range">↓</a>range(1,5) so it will start with 1 and end with 4.
</div>
<blockquote class="Quotation">
<span class="footnotesize"><i>while (x&lt; 10):</i></span><br/>
<span class="footnotesize"><i><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
print "The while iteration is.", x</i></span><br/>
<span class="footnotesize"><i><table>
<tr>
<td align="center" valign="top">

</td>

</tr>

</table>
x=x+1</i></span>
</blockquote>
<div class="Btandard">
The results are: <b>x</b> initialize as <b>3</b> 
</div>
<blockquote class="Quotation">
<span class="footnotesize"><i>while iteration is. 3 </i></span><br/>
<span class="footnotesize"><i>while iteration is. 4 </i></span><br/>
<span class="footnotesize"><i>while iteration is. 5 </i></span><br/>
<span class="footnotesize"><i>while iteration is. 6 </i></span><br/>
<span class="footnotesize"><i>while iteration is. 7 </i></span><br/>
<span class="footnotesize"><i>while iteration is. 8 </i></span><br/>
<span class="footnotesize"><i>while iteration is. 9 </i></span>
</blockquote>
<div class="Btandard">
Notice that indention is very important and can be either a space or tab. Whichever you choose first sets the key or level for the rest of the script. Please change some of the values in the &ldquo;conditions.py&rdquo; to get different results. 
</div>
<h3 class="Subsection">
2.1.11 Summary
</h3>
<div class="Btandard">
In this chapter you will have learned how strings work, and how to supply a number or string to a variable and operators. With what you have learned so far you can compute just about any algorithm. However things would be easier if functions (methods) are used. This will be discussed in later chapters. 
</div>
<h3 class="Subsection">
2.1.12 Exercises
</h3>
<div class="Btandard">
<div class="float">
<a class="Label" name="Figure-2.1"> </a><div class="figure">
<div class="caption">
Figure 2.1 Formula Temperature
</div>
<blockquote class="Quotation">
<div class="Doublebox" style="width: 80%;">
<div class="PlainVisible">
<span class="footnotesize">formula for Celsius to Fahrenheit <span class="formula"><i>c</i>*<span class="fraction"><span class="ignored">(</span><span class="numerator">9</span><span class="ignored">)/(</span><span class="denominator">5</span>+32=<i>x</i></span></span><br/>
<span class="footnotesize">python code for this would be as simple as (c*9/5+32)</span>
</div>

</div>

</blockquote>

</div>

</div>

</div>
<ol>
<li>
Go through the examples above using the interactive interpreter.
</li>
<li>
Write a program to calculate 20 degrees Celsius and convert to Fahrenheit.
</li>
<li>
Continue with previous exercise using variable 'c' calculate Celsius to Fahrenheit on one line and Fahrenheit to Celsius on another line.
</li>
<li>
Go through the examples above using the interactive interpreter.
</li>
<li>
Create a program to print out your name that has been assigned to a variable 's'.
</li>
<li>
Multiply your name by 5 and create a new line each time the name is printed out.
</li>
<li>
Continue with the previous exercise and assign the variable of 5 to x and multiply 's' by 'x'.
</li>
<li>
Go through the examples above using the interactive interpreter.
</li>
<li>
Print out a list of temperatures Celsius to Fahrenheit only using c=20, c=25, c=30, c=40.
</li>
<li>
If the temperature exceeds 90 F print (its hot) if temperate is lower then 70 F print (its cool) otherwise print (its just fine). 
</li>

</ol>

